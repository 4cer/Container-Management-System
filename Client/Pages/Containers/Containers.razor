@page "/containers"
@inject NavigationManager Navigation
@inject IContainerService ContSrvc

<h2>Lista kontenerów, do których masz dostęp</h2>
<MudButton Style="margin: 10px 0;" StartIcon="@Icons.Filled.Add" Color="Color.Primary" Variant="Variant.Filled" OnClick="CreateContainer">Add</MudButton>
<div>
    <MudTable Items="containers" class="mat-elevation-z5" AllowSelection="true" SelectionChanged="SelectionChangedEvent" Hover="true" Dense="true"
              RowClassFunc="@SelectedRowClassFunc" OnRowClick="e => RowClickEvent(e)" @ref="mudTable" T="ContainerModel">
        <HeaderContent>
            <MudTh>ID</MudTh>
            <MudTh>Name</MudTh>
            <MudTh>Image</MudTh>
            <MudTh>Description</MudTh>
            <MudTh>Port</MudTh>
            <MudTh>Machine</MudTh>
            <MudTh>State</MudTh>
            <MudTh>Is running</MudTh>
            <MudTh>Actions</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd>@context.Id</MudTd>
            <MudTd>@context.Name</MudTd>
            <MudTd>@context.Image</MudTd>
            <MudTd>@context.Description</MudTd>
            <MudTd>@context.Port</MudTd>
            <MudTd>@context.Machine</MudTd>
            <MudTd>@context.State</MudTd>
            @if (context.IsRunning)
            {
                <MudTd><MudIcon Icon="@Icons.Filled.Circle" Color="Color.Success"></MudIcon></MudTd>
            }
            else
            {
                <MudTd><MudIcon Icon="@Icons.Filled.Circle" Color="Color.Error"></MudIcon></MudTd>            
            }

            <MudTd Class="actions-cell">
                <MudIconButton Icon="@Icons.Filled.Visibility" Color="Color.Primary" OnClick="e => ViewContainer(context)" />
                <MudIconButton Icon="@Icons.Filled.Delete" Color="Color.Error" OnClick="e => DeleteContainer(context)" />
            </MudTd>
        </RowTemplate>
    </MudTable>
    @if (containers == null)
    {
        <p><em>Loading...</em></p>
    }
</div>

@code {
    List<ContainerModel> containers;
    private int selectedRowNumber = -1;
    private MudTable<ContainerModel> mudTable;

    protected override async Task OnInitializedAsync()
    {
        containers = await ContSrvc.ListContainers("DUPA", 100);
    }

    public void SelectionChangedEvent(object row)
    {
        //Navigation.NavigateTo($"/images/details?id=" + (row as ImageModel).Id);
    }

    private void RowClickEvent(TableRowClickEventArgs<ContainerModel> tableRowClickEventArgs)
    {
        //Navigation.NavigateTo($"containers/details?id={tableRowClickEventArgs.Item.Id}");
        return;
    }

    private string SelectedRowClassFunc(ContainerModel container, int rowNumber)
    {
        if (selectedRowNumber == rowNumber)
        {
            selectedRowNumber = -1;
            return string.Empty;
        }
        else if (mudTable.SelectedItem != null && mudTable.SelectedItem.Equals(container))
        {
            selectedRowNumber = rowNumber;
            return "selected";
        }
        else
        {
            return string.Empty;
        }
    }

    public void ViewContainer(ContainerModel container)
    {
        Navigation.NavigateTo($"/containers/details?id=" + container.Id);
    }

    private void DeleteContainer(ContainerModel container)
    {
        return;
    }

    private void CreateContainer()
    {
        Navigation.NavigateTo($"/containers/add");
    }
}