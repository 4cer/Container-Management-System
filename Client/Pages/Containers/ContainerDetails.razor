@page "/containers/details/{ContainerId}"

@using Microsoft.AspNetCore.WebUtilities
@using ProITM.Shared
@inject NavigationManager Navigation
@inject IContainerService Srvc

<style>
    .container-details-table{
        font-size: 16pt;
    }
    .container-details-table td:first-child{
        font-weight: bold;
    }
</style>

<h3>Szczegóły kontenera</h3>

<div>
    @if (Container != null)
    { 
        <MudTable Items="new List<ContainerModel>(){Container}" T="ContainerModel" Breakpoint="Breakpoint.Xl" style="width: 30%;" Bordered="true">
            <HeaderContent>
                <MudTh><b>ID</b></MudTh>
                <MudTh><b>Name</b></MudTh>
                <MudTh><b>Description</b></MudTh>
                <MudTh><b>Port</b></MudTh>
                <MudTh><b>Status</b></MudTh>
                <MudTh><b>Original Image</b></MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="ID">@context.Id</MudTd>
                <MudTd DataLabel="Name">@context.Name</MudTd>
                <MudTd DataLabel="Description">@context.Description</MudTd>
                <MudTd DataLabel="Port">@context.Port</MudTd>
                <MudTd DataLabel="Status">@context.State</MudTd>
                <MudTd DataLabel="Original Image">@context.Image</MudTd>
            </RowTemplate>
        </MudTable>
    }
</div>

@code {
    public ContainerModel Container { get; set; }
    [Parameter]
    public string ContainerId { get; set; }

    protected override async void OnInitialized()
    {
        var list = await Srvc.ListContainers(100);
        Container = list.Find(c => c.Id == ContainerId);
    }
}
