@page "/images/edit/{ImageId}"
@inject NavigationManager Navigation
@inject ISnackbar Snackbar

@inject IImageService ImgSrvc
@if (Image != null)
{

    <h2>Edit Image</h2>

    <MudItem style="width: 410px">
        <MudTextField @bind-Value="Image.DisplayName" Label="Image name" Variant="Variant.Text" Margin="Margin.Dense"></MudTextField>
    </MudItem>

    <MudItem style="width: 410px">
        <MudTextField @bind-Value="Image.DockerImageName" Label="Dockerhub Image ID" Variant="Variant.Text" Margin="Margin.Dense"></MudTextField>
    </MudItem>

    <MudItem style="width: 410px">
        <MudTextField @bind-Value="Image.Description" Label="Image description" Variant="Variant.Text" Margin="Margin.Dense" Lines="3"></MudTextField>
    </MudItem>

    <br />

    <MudItem>
        <MudFab Color="Color.Primary" Icon="@Icons.Filled.Save" Label="Save" Class="py-4 px-6 rounded-lg" OnClick="UpdateImage" />
    </MudItem>
}


@code {
    [Parameter]
    public string ImageId { get; set; }
    public ImageModel Image { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        Image = await ImgSrvc.GetImageDetails(ImageId);
    }


    private async void UpdateImage()
    {
        var ret = await ImgSrvc.GetImageFromDockerHub(Image);
        Navigation.NavigateTo("/images");
        Snackbar.Configuration.PositionClass = Defaults.Classes.Position.TopCenter;
        if (ret.IsSuccessStatusCode) 
        {
            Snackbar.Add("Image has been edited successfully", Severity.Success);
        }
    }

}
