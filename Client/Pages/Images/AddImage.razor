@page "/images/add"
@inject NavigationManager Navigation
@inject IImageService service

<MudText Typo="Typo.h2">Dodaj obraz</MudText>

<MudItem style="width: 410px">
    <MudTextField @bind-Value="newImage.DisplayName" Label="Nazwa obrazu" Variant="Variant.Text" Margin="Margin.Dense"></MudTextField>
</MudItem>

<MudItem style="width: 410px">
    <MudTextField @bind-Value="newImage.DockerImageName" Label="Adres obrazu w repozytorium dockerhub" Variant="Variant.Text" Margin="Margin.Dense"></MudTextField>
</MudItem>

<MudForm>
    <MudRadioGroup @bind-SelectedOption="@SelectedOption">
        <MudRadio Option="@("Windows")" Color="Color.Primary">Windows</MudRadio>
        <MudRadio Option="@("Linux")" Color="Color.Primary">Linux</MudRadio>
    </MudRadioGroup>
</MudForm>

<br />

<MudItem>
    <MudFab Color="Color.Primary" Icon="@Icons.Material.Filled.Add" Label="Utwórz" Class="py-4 px-6 rounded-lg" OnClick="CreateImage" />
</MudItem>




@code {
    public ImageModel newImage { get; set; } = new();
    /*
     * public string NameValue { get; set; }
    public string ImageName { get; set; }
    public string ContainerPort { get; set; }
    public string TargerPort { get; set; }
    public string Flags { get; set; }
     */
    public string SelectedOption { get; set; }

    private void Reset()
    {
        SelectedOption = null;
    }


    IList<IBrowserFile> files = new List<IBrowserFile>();
    private void UploadFiles(InputFileChangeEventArgs e)
    {
        foreach (var file in e.GetMultipleFiles())
        {
            files.Add(file);
        }
        //TODO upload the files to the server
    }


    private void CreateImage()
    {
        service.GetImageFromDockerHub(newImage);
        Navigation.NavigateTo("/images");
    }

}
