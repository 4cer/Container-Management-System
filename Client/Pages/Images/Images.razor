@page "/images"
@inject NavigationManager Navigation
@inject IImageService ImgSrvc

<h2>List of images</h2>
<MudButton Style="margin: 10px 0;" StartIcon="@Icons.Filled.Add" Color="Color.Primary" Variant="Variant.Filled" OnClick="CreateImage">Add</MudButton>
<div>
    <MudTable Items="images" class="mat-elevation-z5" AllowSelection="true" SelectionChanged="SelectionChangedEvent" Hover="true" Dense="true"
              RowClassFunc="@SelectedRowClassFunc" OnRowClick="e => RowClickEvent(e)" @ref="mudTable" T="ImageModel">
        <HeaderContent>
            <MudTh>ID</MudTh>
            <MudTh>Image ID</MudTh>
            <MudTh>Name</MudTh>
            <MudTh>Description</MudTh>
            <MudTh>Created</MudTh>
            <MudTh>Version</MudTh>
            <MudTh>Actions</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd>@context.Id</MudTd>
            <MudTd>@context.ImageId</MudTd>
            <MudTd>@context.Name</MudTd>
            <MudTd>@context.Description</MudTd>
            <MudTd>@context.Created</MudTd>
            <MudTd>@context.Version</MudTd>
            <MudTd Class="actions-cell">
                <MudIconButton Icon="@Icons.Filled.Visibility" Color="Color.Primary" OnClick="e => ViewImage(context)"/>
                <MudIconButton Icon="@Icons.Filled.Edit" Color="Color.Info" OnClick="e => EditImage(context)"/>
                <MudIconButton Icon="@Icons.Filled.Delete" Color="Color.Error" OnClick="e => DeleteImage(context)" />
            </MudTd>
        </RowTemplate>
    </MudTable>
    @if(images == null) {
        <p><em>Loading...</em></p>
    }
</div>

@code {

    List<ImageModel> images;
    private int selectedRowNumber = -1;
    private MudTable<ImageModel> mudTable;


    public void SelectionChangedEvent(object row)
    {
        //Navigation.NavigateTo($"/images/details?id=" + (row as ImageModel).Id);
    }

    protected override async Task OnInitializedAsync()
    {
        images = await ImgSrvc.GetImageList();
    }


    private void RowClickEvent(TableRowClickEventArgs<ImageModel> tableRowClickEventArgs)
    {
        return;
    }

    private string SelectedRowClassFunc(ImageModel image, int rowNumber)
    {
        if (selectedRowNumber == rowNumber)
        {
            selectedRowNumber = -1;
            return string.Empty;
        }
        else if (mudTable.SelectedItem != null && mudTable.SelectedItem.Equals(image))
        {
            selectedRowNumber = rowNumber;
            return "selected";
        }
        else
        {
            return string.Empty;
        }
    }

    private void DeleteImage(ImageModel image)
    {
        return;
    }

    private void EditImage(ImageModel image)
    {
        return;
    }

    private void ViewImage(ImageModel image)
    {
        Navigation.NavigateTo($"/images/details?id=" + image.Id);
    }

    private void CreateImage()
    {
        Navigation.NavigateTo($"/images/add");
    }
}