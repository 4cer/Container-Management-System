@page "/manage/admins"
@*attribute [Authorize(Roles = "Admin")]
*@
@inject IAdministrationService administrationService
@inject NavigationManager navigationManager

<h3>Manage Admins</h3>

@if (admins == null)
{
    <p><em>Loading...asd</em></p>

}
else
{
    <MudButton @onclick="(() => EditUsersInGroup())">Add or Remove Admins</MudButton>

    @if (!admins.Any())
    {
        <p>No admins added yet.</p>
        <p>Sounds like your application has a major issue.</p>
    }
    else
    {
        <MudTable Items="admins" class="mat-elevation-z5" AllowSelection="true" SelectionChanged="SelectionChangedEvent" Hover="true" Dense="true"
                  RowClassFunc="@SelectedRowClassFunc" OnRowClick="e => RowClickEvent(e)" @ref="mudTable" T="UserModel">
            <HeaderContent>
                <MudTh>Name</MudTh>
                <MudTh>Email</MudTh>
                <MudTh>Confirmed</MudTh>
                <MudTh>Actions</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd>@context.UserName</MudTd>
                <MudTd>@context.Email</MudTd>
                <MudTd>@context.EmailConfirmed</MudTd>
                <MudTd Class="actions-cell">
                    <MudIconButton Icon="@Icons.Filled.Edit" Color="Color.Info" />
                    <MudIconButton Icon="@Icons.Filled.Delete" Color="Color.Error" />
                </MudTd>
            </RowTemplate>
        </MudTable>

    }

}


@code {

    private List<UserModel> admins;
    private int selectedRowNumber = -1;
    private MudTable<UserModel> mudTable;

    //protected override async Task OnInitializedAsync()
    //{
    //    admins = await administrationService.GetAdmins();
    //}

    protected void EditUsersInGroup()
    {
        navigationManager.NavigateTo($"manage/admins/usersinrole/");
    }

    private string SelectedRowClassFunc(UserModel host, int rowNumber)
    {
        if (selectedRowNumber == rowNumber)
        {
            selectedRowNumber = -1;
            return string.Empty;
        }
        else if (mudTable.SelectedItem != null && mudTable.SelectedItem.Equals(host))
        {
            selectedRowNumber = rowNumber;
            return "selected";
        }
        else
        {
            return string.Empty;
        }
    }

    private void RowClickEvent(TableRowClickEventArgs<UserModel> tableRowClickEventArgs)
    {
        return;
    }

}
