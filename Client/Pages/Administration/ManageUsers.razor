@page "/manage/users"
@*attribute [Authorize(Roles = "Admin")]
*@
@inject IAdministrationService administrationService
@inject NavigationManager navigationManager


<link href="https://use.fontawesome.com/releases/v5.14.0/css/all.css" rel="stylesheet">

<h2>Manage Users</h2>
<br />

@if (message != null)
{
    <div class="alert alert-danger overflow-auto">
        <h4>@message.ReasonPhrase</h4>
        <p>
            @message.RequestMessage;
        </p>
    </div>
}

@if (users == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <MudTable Items="users" class="mat-elevation-z5" AllowSelection="true" SelectionChanged="SelectionChangedEvent" Hover="true" Dense="true"
              RowClassFunc="@SelectedRowClassFunc" OnRowClick="e => RowClickEvent(e)" @ref="mudTable" T="UserModel">

        <HeaderContent>
            <MudTh>Name</MudTh>
            <MudTh>Email</MudTh>
            <MudTh>Confirmed</MudTh>
            @*<MudTh>Active containers</MudTh>*@
            <MudTh>Auth level</MudTh>
            <MudTh>Actions</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd>@context.UserName</MudTd>
            <MudTd>@context.Email</MudTd>
            @if (context.EmailConfirmed)
            {
                <MudTd><MudIcon Icon="fas fa-check" Color="Color.Success"></MudIcon></MudTd>
            }
            else
            {
                <MudTd><MudIcon Icon="fas fa-times" Color="Color.Error"></MudIcon></MudTd>
            }

            @*TODO show number of containers for each user*@
            @*<MudTd>---</MudTd>*@

            <MudTd>
                @if (context.IsAdmin)
                {<p>Administrator</p> }
                else
                { <p>User</p>}
            </MudTd>
            <MudTd>
                <MudTooltip Text="Edit profile">
                    <MudIconButton Icon="@Icons.Filled.Edit" Color="Color.Info" @onclick="(() => ClickEditUser(context.Id))"></MudIconButton>
                </MudTooltip>
                @if (context.IsAdmin)
                {
                    <MudTooltip Text="Demote to User">
                        <MudIconButton Icon="fas fa-angle-double-down" Color="Color.Error" @onclick="(() => ClickDemoteUser(context.Id))"></MudIconButton>
                    </MudTooltip>
                }
                else
                {
                    <MudTooltip Text="Promote to Administrator">
                        <MudIconButton Icon="fas fa-angle-double-up" Color="Color.Success" @onclick="(() => ClickPromoteUser(context.Id))"></MudIconButton>
                    </MudTooltip>
                }
            <MudTooltip Text="Delete profile">
                <MudIconButton Icon="@Icons.Filled.Delete" Color="Color.Error" @onclick="(() => ClickDeleteUser(context.Id))"></MudIconButton>
            </MudTooltip>
            </MudTd>



        </RowTemplate>

    </MudTable>

}


@code {
    List<UserModel> users;
    private MudTable<UserModel> mudTable;
    private int selectedRowNumber = -1;

    HttpResponseMessage message;

    protected override async Task OnInitializedAsync()
    {
        users = await administrationService.GetUsers();
    }

    protected async void ClickDeleteUser(string id)
    {
        var result = await administrationService.DeleteUser(id);
        if (result.IsSuccessStatusCode)
        {
            navigationManager.NavigateTo($"manage/users");
        }
        message = result;
    }

    protected async void ClickPromoteUser(string id)
    {
        var result = await administrationService.PromoteUser(id);
        if (result.IsSuccessStatusCode)
        {
            users = await administrationService.GetUsers();
            StateHasChanged();
        }
    }

    protected async void ClickDemoteUser(string id)
    {
        var result = await administrationService.DemoteUser(id);
        if (result.IsSuccessStatusCode)
        {
            users = await administrationService.GetUsers();
            StateHasChanged();
        }
    }

    protected void ClickEditUser(string id)
    {
        navigationManager.NavigateTo($"/manage/users/edit/{id}");
    }

    private string SelectedRowClassFunc(UserModel host, int rowNumber)
    {
        if (selectedRowNumber == rowNumber)
        {
            selectedRowNumber = -1;
            return string.Empty;
        }
        else if (mudTable.SelectedItem != null && mudTable.SelectedItem.Equals(host))
        {
            selectedRowNumber = rowNumber;
            return "selected";
        }
        else
        {
            return string.Empty;
        }
    }

    private void RowClickEvent(TableRowClickEventArgs<UserModel> tableRowClickEventArgs)
    {
        return;
    }
}
