@page "/manage/users"
@attribute [Authorize(Roles = "Admin")]
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using ProITM.Client.Services
@using ProITM.Shared
@inject IAdministrationService AdministrationService

<h3>Manage Users</h3>


@if (users == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Nr.</th>
                <th>Name</th>
                <th>Email</th>
                <th>Confirmed</th>
                <th>Active containers</th>
                <th>Auth level</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in users)
            {
                counter++;
                <tr>
                    <td>@counter</td>
                    <td>@user.UserName</td>
                    <td>@user.Email</td>
                    <td>@user.EmailConfirmed</td>
                    <td>---</td>
                    <td>
                        @if (user.IsAdmin) { <p>Administrator</p> } else { <p>User</p> }
                    </td>
                    <td>
                        <button class="btn btn-secondary" href="#">Edit</button>
                        @if (user.IsAdmin)
                        {
                            <button class="btn btn-primary" href="#">Demote</button>
                        }
                        else
                        {
                            <button class="btn btn-primary" href="#">Promote</button>
                        }
                        <button class="btn btn-danger" href="#">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    
}


@code {
    List<UserModel> users;

    int counter = 0;

    protected override async Task OnInitializedAsync()
    {
        users = await AdministrationService.GetUsers();
    }
}
