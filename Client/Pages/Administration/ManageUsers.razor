@page "/manage/users"
@*attribute [Authorize(Roles = "Admin")]
*@
@inject IAdministrationService administrationService
@inject NavigationManager navigationManager

<h3>Manage Users</h3>

@if (message != null)
{
    <div class="alert alert-danger overflow-auto">
        <h4>@message.ReasonPhrase</h4>
        <p>
            @message.RequestMessage;
        </p>
    </div>
}

@if (users == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <MudTable Items="users" class="mat-elevation-z5" AllowSelection="true" SelectionChanged="SelectionChangedEvent" Hover="true" Dense="true"
              RowClassFunc="@SelectedRowClassFunc" OnRowClick="e => RowClickEvent(e)" @ref="mudTable" T="UserModel">

        <HeaderContent>
            <MudTh>Nr.</MudTh>
            <MudTh>Name</MudTh>
            <MudTh>Email</MudTh>
            <MudTh>Confirmed</MudTh>
            <MudTh>Active containers</MudTh>
            <MudTh>Auth level</MudTh>
            <MudTh>Actions</MudTh>
        </HeaderContent>
        <RowTemplate>
        
            
                <MudTd>@context.UserName</MudTd>
                <MudTd>@context.Email</MudTd>
                <MudTd>@context.EmailConfirmed</MudTd>
                <MudTd>---</MudTd>
                <MudTd>
                    @if (context.IsAdmin)
                    {<p>Administrator</p> }
                    else
                    { <p>User</p>}
                </MudTd>
                <MudTd>
                    <MudButton @onclick="(() => ClickEditUser(context.Id))">Edit</MudButton>
                    @if (context.IsAdmin)
                    {
                        <MudButton  @onclick="(() => ClickDemoteUser(context.Id))">Demote</MudButton>
                    }
                    else
                    {
                        <MudButton  @onclick="(() => ClickPromoteUser(context.Id))">Promote</MudButton>
                    }
                    <MudButton  @onclick="(() => ClickDeleteUser(context.Id))">Delete</MudButton>
                </MudTd>

                
          
        </RowTemplate>

    </MudTable>

}


@code {
    List<UserModel> users;
    private MudTable<UserModel> mudTable;
    private int selectedRowNumber = -1;

    HttpResponseMessage message;

    protected override async Task OnInitializedAsync()
    {
        users = await administrationService.GetUsers();
    }

    protected async void ClickDeleteUser(string id)
    {
        var result = await administrationService.DeleteUser(id);
        if (result.IsSuccessStatusCode)
        {
            navigationManager.NavigateTo($"manage/users", true);
        }
        message = result;
    }

    protected async void ClickPromoteUser(string id)
    {
        var result = await administrationService.PromoteUser(id);
        if (result.IsSuccessStatusCode)
        {
            navigationManager.NavigateTo($"manage/users", true);
        }
        message = result;
    }

    protected async void ClickDemoteUser(string id)
    {
        var result = await administrationService.DemoteUser(id);
        if (result.IsSuccessStatusCode)
        {
            navigationManager.NavigateTo($"manage/users", true);
        }
        message = result;
    }

    protected async void ClickEditUser(string id)
    {

        navigationManager.NavigateTo($"/manage/users/edit/{id}", true);
    }

    private string SelectedRowClassFunc(UserModel host, int rowNumber)
    {
        if (selectedRowNumber == rowNumber)
        {
            selectedRowNumber = -1;
            return string.Empty;
        }
        else if (mudTable.SelectedItem != null && mudTable.SelectedItem.Equals(host))
        {
            selectedRowNumber = rowNumber;
            return "selected";
        }
        else
        {
            return string.Empty;
        }
    }

    private void RowClickEvent(TableRowClickEventArgs<UserModel> tableRowClickEventArgs)
    {
        return;
    }
}
